employment_impact_laid_off ~ "Laid off temporarily or permanently during COVID-19 Pandemic",
phq_total ~ "PHQ Score",
occupation ~ "Occupation",
age_groups ~ "Age",
gender ~ "Gender",
identity_lgbtq ~ "Sexual or gender minority (e.g., LGBTQ2+)",
identity_bipoc ~ "Person of colour (e.g., Black, Indigenous, Asian  or other racialized minority)",
income ~ "Income",
own_rent ~ "Dwelling Ownership"),
value = list(money_fetting_by ~ "dichotomous"),
missing = "no",
type = list(identity_lgbtq ~ "categorical",
identity_bipoc ~ "categorical",
occupation ~ "categorical",
age_groups ~ "categorical",
income ~ "categorical",
own_rent ~ "categorical",
gender ~ "categorical",
where(is.logical() ~ "categorical")))
?where
summary_table_1 <- tbl_summary(analysis_data, include = c("gad_total", "phq_total", "occupation",
"money_fetting_by", "age_groups", "employment_impact_laid_off",
"gender", "identity_lgbtq", "identity_bipoc", "income", "own_rent"),
label = list(gad_total ~ "GAD Score",
money_fetting_by ~ "I am just getting by financially",
employment_impact_laid_off ~ "Laid off temporarily or permanently during COVID-19 Pandemic",
phq_total ~ "PHQ Score",
occupation ~ "Occupation",
age_groups ~ "Age",
gender ~ "Gender",
identity_lgbtq ~ "Sexual or gender minority (e.g., LGBTQ2+)",
identity_bipoc ~ "Person of colour (e.g., Black, Indigenous, Asian  or other racialized minority)",
income ~ "Income",
own_rent ~ "Dwelling Ownership"),
value = list(money_fetting_by ~ "dichotomous"),
missing = "no",
type = list(identity_lgbtq ~ "categorical",
identity_bipoc ~ "categorical",
occupation ~ "categorical",
age_groups ~ "categorical",
income ~ "categorical",
own_rent ~ "categorical",
gender ~ "categorical",
tidyr::where(is.logical() ~ "categorical")))
table(analysis_data$money_fetting_by, analysis_data$employment_impact_laid_off)
sum(1248 + 233)
prop.table(table(analysis_data$money_fetting_by, analysis_data$employment_impact_laid_off), 1)*100
prop.table(table(analysis_data$money_fetting_by, analysis_data$employment_impact_laid_off), 2)*100
summary_table_1 <- tbl_summary(analysis_data, include = c("gad_total", "phq_total", "occupation",
"money_fetting_by", "age_groups", "employment_impact_laid_off",
"gender", "identity_lgbtq", "identity_bipoc", "income", "own_rent"),
label = list(gad_total ~ "GAD Score",
money_fetting_by ~ "I am just getting by financially",
employment_impact_laid_off ~ "Laid off temporarily or permanently during COVID-19 Pandemic",
phq_total ~ "PHQ Score",
occupation ~ "Occupation",
age_groups ~ "Age",
gender ~ "Gender",
identity_lgbtq ~ "Sexual or gender minority (e.g., LGBTQ2+)",
identity_bipoc ~ "Person of colour (e.g., Black, Indigenous, Asian  or other racialized minority)",
income ~ "Income",
own_rent ~ "Dwelling Ownership"),
value = list(money_fetting_by ~ "No"),
missing = "no",
type = list(identity_lgbtq ~ "categorical",
identity_bipoc ~ "categorical",
occupation ~ "categorical",
age_groups ~ "categorical",
income ~ "categorical",
own_rent ~ "categorical",
gender ~ "categorical"))
summary_table_1 <- tbl_summary(analysis_data, include = c("gad_total", "phq_total", "occupation",
"money_fetting_by", "age_groups", "employment_impact_laid_off",
"gender", "identity_lgbtq", "identity_bipoc", "income", "own_rent"),
label = list(gad_total ~ "GAD Score",
money_fetting_by ~ "I am just getting by financially",
employment_impact_laid_off ~ "Laid off temporarily or permanently during COVID-19 Pandemic",
phq_total ~ "PHQ Score",
occupation ~ "Occupation",
age_groups ~ "Age",
gender ~ "Gender",
identity_lgbtq ~ "Sexual or gender minority (e.g., LGBTQ2+)",
identity_bipoc ~ "Person of colour (e.g., Black, Indigenous, Asian  or other racialized minority)",
income ~ "Income",
own_rent ~ "Dwelling Ownership"),
value = list(money_fetting_by ~ "No"),
missing = "no",
type = list(identity_lgbtq ~ "categorical",
identity_bipoc ~ "categorical",
occupation ~ "categorical",
age_groups ~ "categorical",
income ~ "categorical",
own_rent ~ "categorical",
gender ~ "categorical"))
summary_table_1
analysis_match <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(analysis_match)
analysis_match_data <-  match.data(analysis_match)
?msummary
analysis_match_data$money_fetting_by <- ifelse(analysis_match_data$money_fetting_by == 'Yes', 1, 0)
analysis_match_data$employment_impact_laid_off <- ifelse(analysis_match_data$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = analysis_match_data)
gad_lm <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = analysis_match_data)
msummary(models = list("PHQ-2" = phq_lm,
"GAD-2" = gad_lm),
conf_level = 0.95,
stars=c('*' = .1, '**' = .05, '***' = .01),
output = "//Users//aidanbodner//Desktop//regression_table.rtf")
?confint
confint(phq_lm, "employment_impact_laid_off", level = 0.95)
confint(phq_lm, "(intercept)", level = 0.95)
?lm
summary(phq_lm)
confint(phq_lm)
confint(gad_lm)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(gtsummary) # For creating summary statistics table
library(gt) # For outputting gt objects
library(MatchIt) # For matching
library(mice) # For imputation
library(modelsummary) # For regression tables
library(VIM) # To visualize missing data
analysis_data <- read.csv("/Users/aidanbodner/Documents/GitHub/HAD5744-Group-Project/1. Data/imputed_data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # load the installed package for each new session of R
library(broom) # helps for storing regression output
library(here) # for file organization
library(gtsummary) # For creating summary statistics table
library(gt) # For outputting gt objects
library(MatchIt) # For matching
library(mice) # For imputation
library(modelsummary) # For regression tables
library(VIM) # To visualize missing data
analysis_data <- read.csv("/Users/aidanbodner/Documents/GitHub/HAD5744-Group-Project/1. Data/imputed_data.csv")
install.packages("KernelKnn")
library(KernelKnn)
?KernelKnn
?matchit
here() # Set working directory
raw_data <- read.csv("/Users/aidanbodner/Documents/GitHub/HAD5744-Group-Project/1. Data/data.csv",
na.strings = c(" ", "", "NA", "9999: Missing")) # Load original data
analysis_data <- raw_data[, c("gad_anxious", "gad_worry", "phq_little_interest",
"phq_feeling_down", "occupation","employment_impact_not_employed",
"money_fetting_by","employment_impact_laid_off", "age_groups", "gender",
"identity_lgbtq", "identity_bipoc",
"educational_attainment", "income",
"own_rent", "money_concerned")]
analysis_data$money_fetting_by[analysis_data$money_fetting_by == "Completely"] <- 5
analysis_data$money_fetting_by[analysis_data$money_fetting_by == "Very Well"] <- 4
analysis_data$money_fetting_by[analysis_data$money_fetting_by == "Somewhat"] <- 3
analysis_data$money_fetting_by[analysis_data$money_fetting_by == "Not at all"] <- 2
analysis_data$money_fetting_by[analysis_data$money_fetting_by == "Very Little"] <- 1
analysis_data$money_concerned[analysis_data$money_concerned == "Completely"] <- 5
analysis_data$money_concerned[analysis_data$money_concerned == "Very Well"] <- 4
analysis_data$money_concerned[analysis_data$money_concerned == "Somewhat"] <- 3
analysis_data$money_concerned[analysis_data$money_concerned == "Not at all"] <- 2
analysis_data$money_concerned[analysis_data$money_concerned == "Very Little"] <- 1
class(analysis_data$money_concerned)
analysis_data$money_concerned <- as.numeric(analysis_data$money_concerned)
analysis_data$money_fetting_by <- as.numeric(analysis_data$money_fetting_by)
class(analysis_data$money_concerned)
cor_test <- cor(x = analysis_data$money_fetting_by, y = analysis_data$money_concerned, use = "complete.obs", method = "pearson")
summary(cor_test)
cor_test
ggplot(analysis_data, aes(x = money_fetting_by, y = money_concerned)) + geom_point()
ggplot(data = analysis_data) +
geom_point(mapping = aes(x = money_fetting_by, y = money_concerned))
ggplot(data = analysis_data) +
geom_point(mapping = aes(x = money_fetting_by, y = money_concerned)) +
geom_jitter()
ggplot(data = analysis_data, aes(x = money_fetting_by, y = money_concerned)) +
geom_point() + geom_jitter()
ggplot(data = analysis_data, aes(x = money_fetting_by, y = money_concerned)) +
geom_point() + geom_jitter() + geom_smooth()
ggplot(data = analysis_data, aes(x = money_fetting_by, y = money_concerned)) +
geom_point() + geom_jitter() + geom_smooth(method = "lm")
analysis_data <- read.csv("/Users/aidanbodner/Documents/GitHub/HAD5744-Group-Project/1. Data/imputed_data.csv")
robust_match_2 <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "exact",
verbose = TRUE)
summary(robust_match_2)
robust_match_exact <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "exact",
verbose = TRUE)
summary(robust_match_exact)
robust_match_nearest_replace <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(robust_match_nearest_replace)
robust_match_nearest_no_replace <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = FALSE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(robust_match_nearest_no_replace)
robust_match_prop <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "glm",
caliper = ,
verbose = TRUE)
class(analysis_data$employment_impact_laid_off)
analysis_data$employment_impact_laid_off <- as.factor(analysis_data$employment_impact_laid_off)
robust_match_prop <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "glm",
caliper = ,
verbose = TRUE)
summary(robust_match_prop)
analysis_data$employment_impact_laid_off <- as.factor(analysis_data$employment_impact_laid_off)
robust_match_exact <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "exact",
verbose = TRUE)
summary(robust_match_exact)
robust_match_exact_frame <- match.data(robust_match_exact)
robust_match_nearest_replace <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(robust_match_nearest_replace)
robust_match_nearest_no_replace <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = FALSE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(robust_match_nearest_no_replace)
robust_match_prop <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "glm",
caliper = ,
verbose = TRUE)
summary(robust_match_prop)
robust_match_exact_frame <- match.data(robust_match_exact)
robust_match_nearest_replace_frame <- match.data(robust_match_nearest_replace)
robust_match_nearest_no_replace_frame <- match.data(robust_match_nearest_no_replace)
robust_match_prop_frame <- match.data(robust_match_prop)
robust_match_exact_frame$money_fetting_by <- ifelse(robust_match_exact_frame$money_fetting_by == 'Yes', 1, 0)
robust_match_exact_frame$employment_impact_laid_off <- ifelse(robust_match_exact_frame$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm_exact <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_exact_frame)
gad_lm_exact <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_exact_frame)
robust_match_nearest_replace_frame$money_fetting_by <- ifelse(robust_match_nearest_replace_frame$money_fetting_by == 'Yes', 1, 0)
robust_match_nearest_replace_frame$employment_impact_laid_off <- ifelse(robust_match_nearest_replace_frame$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm_NN_replace <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_nearest_replace_frame)
gad_lm_NN_replace <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_nearest_replace_frame)
robust_match_nearest_no_replace_frame$money_fetting_by <- ifelse(robust_match_nearest_no_replace_frame$money_fetting_by == 'Yes', 1, 0)
robust_match_nearest_no_replace_frame$employment_impact_laid_off <- ifelse(robust_match_nearest_no_replace_frame$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm_NN_no_replace <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_nearest_no_replace_frame)
gad_lm_NN_no_replace <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_nearest_no_replace_frame)
robust_match_prop_frame$money_fetting_by <- ifelse(robust_match_prop_frame$money_fetting_by == 'Yes', 1, 0)
robust_match_prop_frame$employment_impact_laid_off <- ifelse(robust_match_prop_frame$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm_propensity <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_prop_frame)
gad_lm_propensity <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_prop_frame)
?msummary
msummary(models = list("Exact Matching" = phq_lm_exact,
"Nearest Neighbour with Replacement" = phq_lm_NN_replace,
"Nearest Neighbour without Replacement" = phq_lm_NN_no_replace,
"Propensity Score Matching" = phq_lm_propensity),
title = "Effect of Employment Status and Financial Security on Depression",
stars=c('*' = .1, '**' = .05, '***' = .01),
output = "//Users//aidanbodner//Desktop//PHQ_robust_regression_check.rtf")
msummary(models = list("Exact Matching" = gad_lm_exact,
"Nearest Neighbour with Replacement" = gad_lm_NN_replace,
"Nearest Neighbour without Replacement" = gad_lm_NN_no_replace,
"Propensity Score Matching" = gad_lm_propensity),
title = "Effect of Employment Status and Financial Security on Generalized Anxiety Disorder",
stars=c('*' = .1, '**' = .05, '***' = .01),
output = "//Users//aidanbodner//Desktop//GAD_robust_regression_check.rtf")
msummary(models = list("Exact Matching" = phq_lm_exact,
"Nearest Neighbour with Replacement" = phq_lm_NN_replace,
"Nearest Neighbour without Replacement" = phq_lm_NN_no_replace,
"Propensity Score Matching" = phq_lm_propensity),
title = "Effect of Employment Status and Financial Security on Depression",
fmt = '%.2f',
stars=c('*' = .1, '**' = .05, '***' = .01),
output = "//Users//aidanbodner//Desktop//PHQ_robust_regression_check.rtf")
msummary(models = list("Exact Matching" = gad_lm_exact,
"Nearest Neighbour with Replacement" = gad_lm_NN_replace,
"Nearest Neighbour without Replacement" = gad_lm_NN_no_replace,
"Propensity Score Matching" = gad_lm_propensity),
title = "Effect of Employment Status and Financial Security on Generalized Anxiety Disorder",
fmt = '%.2f',
stars=c('*' = .1, '**' = .05, '***' = .01),
output = "//Users//aidanbodner//Desktop//GAD_robust_regression_check.rtf")
analysis_data <- read.csv("/Users/aidanbodner/Documents/GitHub/HAD5744-Group-Project/1. Data/imputed_data.csv")
analysis_match <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(analysis_match)
analysis_match_data <-  match.data(analysis_match)
analysis_match_data$money_fetting_by <- ifelse(analysis_match_data$money_fetting_by == 'Yes', 1, 0)
analysis_match_data$employment_impact_laid_off <- ifelse(analysis_match_data$employment_impact_laid_off == 'Yes', 1, 0)
# Check to see if models are different including matched variables as covariates in the regression
phq_lm <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = analysis_match_data)
gad_lm <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = analysis_match_data)
msummary(models = list("PHQ-2" = phq_lm,
"GAD-2" = gad_lm),
stars=c('*' = .1, '**' = .05, '***' = .01),
fmt = '%.2f',
output = "//Users//aidanbodner//Desktop//regression_table.rtf")
confint(phq_lm)
confint(gad_lm)
unmatched_table <- tbl_summary(analysis_data, include = c("occupation", "employment_impact_laid_off",
"money_fetting_by", "age_groups",
"gender", "identity_lgbtq", "identity_bipoc", "income", "own_rent"),
by = employment_impact_laid_off,
label = list(occupation ~ "Occupation",
money_fetting_by ~ "I am just getting by financially.",
age_groups ~ "Age",
gender ~ "Gender",
identity_lgbtq ~ "Sexual or gender minority (e.g., LGBTQ2+)",
identity_bipoc ~ "Person of colour (e.g., Black, Indigenous, Asian  or other racialized minority)",
income ~ "Income",
own_rent ~ "Dwelling Ownership"),
missing = "no",
type = list(identity_lgbtq ~ "categorical",
identity_bipoc ~ "categorical",
occupation ~ "categorical",
age_groups ~ "categorical",
income ~ "categorical",
own_rent ~ "categorical",
gender ~ "categorical",
money_fetting_by ~ "categorical")) %>%
add_p(test = everything() ~ "chisq.test")
chisq.test(analysis_data$employment_impact_laid_off, analysis_data$occupation)
match_table <- tbl_summary(analysis_match_data, include = c("occupation", "employment_impact_laid_off",
"money_fetting_by", "age_groups",
"gender", "identity_lgbtq", "identity_bipoc", "income", "own_rent"),
by = employment_impact_laid_off,
label = list(occupation ~ "Occupation",
money_fetting_by ~ "I am just getting by financially.",
age_groups ~ "Age",
gender ~ "Gender",
identity_lgbtq ~ "Sexual or gender minority (e.g., LGBTQ2+)",
identity_bipoc ~ "Person of colour (e.g., Black, Indigenous, Asian  or other racialized minority)",
income ~ "Income",
own_rent ~ "Dwelling Ownership",
money_fetting_by ~ "I am just getting by financially"),
missing = "no",
type = list(identity_lgbtq ~ "categorical",
identity_bipoc ~ "categorical",
occupation ~ "categorical",
age_groups ~ "categorical",
income ~ "categorical",
own_rent ~ "categorical",
gender ~ "categorical",
money_fetting_by ~ "categorical")) %>%
add_p(test = everything() ~ "chisq.test")
balance_table <- tbl_merge(tbls = list(unmatched_table,
match_table),
tab_spanner = c("UnMatched Balance Table",
"Nearest Neighbour Matched Balance Table")) %>%
as_gt %>%
gt::gtsave(file = "//Users//aidanbodner//Desktop//balance_table.rtf")
analysis_data <- read.csv("/Users/aidanbodner/Documents/GitHub/HAD5744-Group-Project/1. Data/imputed_data.csv")
analysis_match <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(analysis_match)
analysis_match_data <-  match.data(analysis_match)
unmatched_table <- tbl_summary(analysis_data, include = c("occupation", "employment_impact_laid_off",
"money_fetting_by", "age_groups",
"gender", "identity_lgbtq", "identity_bipoc", "income", "own_rent"),
by = employment_impact_laid_off,
label = list(occupation ~ "Occupation",
money_fetting_by ~ "I am just getting by financially.",
age_groups ~ "Age",
gender ~ "Gender",
identity_lgbtq ~ "Sexual or gender minority (e.g., LGBTQ2+)",
identity_bipoc ~ "Person of colour (e.g., Black, Indigenous, Asian  or other racialized minority)",
income ~ "Income",
own_rent ~ "Dwelling Ownership"),
missing = "no",
type = list(identity_lgbtq ~ "categorical",
identity_bipoc ~ "categorical",
occupation ~ "categorical",
age_groups ~ "categorical",
income ~ "categorical",
own_rent ~ "categorical",
gender ~ "categorical",
money_fetting_by ~ "categorical")) %>%
add_p(test = everything() ~ "chisq.test")
chisq.test(analysis_data$employment_impact_laid_off, analysis_data$occupation)
match_table <- tbl_summary(analysis_match_data, include = c("occupation", "employment_impact_laid_off",
"money_fetting_by", "age_groups",
"gender", "identity_lgbtq", "identity_bipoc", "income", "own_rent"),
by = employment_impact_laid_off,
label = list(occupation ~ "Occupation",
money_fetting_by ~ "I am just getting by financially.",
age_groups ~ "Age",
gender ~ "Gender",
identity_lgbtq ~ "Sexual or gender minority (e.g., LGBTQ2+)",
identity_bipoc ~ "Person of colour (e.g., Black, Indigenous, Asian  or other racialized minority)",
income ~ "Income",
own_rent ~ "Dwelling Ownership",
money_fetting_by ~ "I am just getting by financially"),
missing = "no",
type = list(identity_lgbtq ~ "categorical",
identity_bipoc ~ "categorical",
occupation ~ "categorical",
age_groups ~ "categorical",
income ~ "categorical",
own_rent ~ "categorical",
gender ~ "categorical",
money_fetting_by ~ "categorical")) %>%
add_p(test = everything() ~ "chisq.test")
balance_table <- tbl_merge(tbls = list(unmatched_table,
match_table),
tab_spanner = c("UnMatched Balance Table",
"Nearest Neighbour Matched Balance Table")) %>%
as_gt %>%
gt::gtsave(file = "//Users//aidanbodner//Desktop//balance_table.rtf")
analysis_data$employment_impact_laid_off <- as.factor(analysis_data$employment_impact_laid_off)
robust_match_exact <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "exact",
verbose = TRUE)
summary(robust_match_exact)
robust_match_exact_frame <- match.data(robust_match_exact)
robust_match_exact_frame$money_fetting_by <- ifelse(robust_match_exact_frame$money_fetting_by == 'Yes', 1, 0)
robust_match_exact_frame$employment_impact_laid_off <- ifelse(robust_match_exact_frame$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm_exact <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_exact_frame)
gad_lm_exact <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_exact_frame)
# Nearest Neighbour -- With replacement
robust_match_nearest_replace <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(robust_match_nearest_replace)
robust_match_nearest_replace_frame <- match.data(robust_match_nearest_replace)
robust_match_nearest_replace_frame$money_fetting_by <- ifelse(robust_match_nearest_replace_frame$money_fetting_by == 'Yes', 1, 0)
robust_match_nearest_replace_frame$employment_impact_laid_off <- ifelse(robust_match_nearest_replace_frame$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm_NN_replace <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_nearest_replace_frame)
gad_lm_NN_replace <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_nearest_replace_frame)
# Nearest Neighbour -- Without replacement
robust_match_nearest_no_replace <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = FALSE,
distance = "scaled_euclidean",
verbose = TRUE)
summary(robust_match_nearest_no_replace)
robust_match_nearest_no_replace_frame <- match.data(robust_match_nearest_no_replace)
robust_match_nearest_no_replace_frame$money_fetting_by <- ifelse(robust_match_nearest_no_replace_frame$money_fetting_by == 'Yes', 1, 0)
robust_match_nearest_no_replace_frame$employment_impact_laid_off <- ifelse(robust_match_nearest_no_replace_frame$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm_NN_no_replace <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_nearest_no_replace_frame)
gad_lm_NN_no_replace <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_nearest_no_replace_frame)
# Propensity Score
robust_match_prop <- matchit(employment_impact_laid_off ~ occupation + age_groups + gender + identity_lgbtq +
identity_bipoc + income + own_rent,
data = analysis_data,
method = "nearest",
replace = TRUE,
distance = "glm",
caliper = ,
verbose = TRUE)
summary(robust_match_prop)
robust_match_prop_frame <- match.data(robust_match_prop)
robust_match_prop_frame$money_fetting_by <- ifelse(robust_match_prop_frame$money_fetting_by == 'Yes', 1, 0)
robust_match_prop_frame$employment_impact_laid_off <- ifelse(robust_match_prop_frame$employment_impact_laid_off == 'Yes', 1, 0)
phq_lm_propensity <- lm(phq_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_prop_frame)
gad_lm_propensity <- lm(gad_total ~ employment_impact_laid_off + employment_impact_laid_off:money_fetting_by, data = robust_match_prop_frame)
summary(robust_match_exact)
summary(robust_match_exact)
summary(robust_match_nearest_replace)
summary(robust_match_nearest_no_replace)
